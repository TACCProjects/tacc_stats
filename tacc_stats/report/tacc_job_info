#!/bin/bash

prog=$(basename "$0")
prog_path=$([[ $0 == /* ]] && echo "$0" || echo "${PWD}/${0#./}")
export PATH=$PATH:$(dirname "$prog_path")

stats_home=${TACC_STATS_HOME-/scratch/projects/tacc_stats}
accounting_file=$stats_home/accounting
hostfile_dir=$stats_home/hostfiles
report_dir=${report_dir-.} # /share/home/01114/jhammond/tacc_stats_report

trace() {
    if [ -n "$DEBUG" ]; then
        echo "$1" >&2
    fi
}

error() {
    echo "$1" >&2
}

fatal() {
    echo "$1" >&2
    exit 1
}

trace "prog $prog"
trace "prog_path $prog_path"
trace "PATH $PATH"

job_id=$1
if [ -z "$job_id" ]; then
    fatal "$prog: must specify a job ID"
fi

job_record="$(awk -F: -v job_id=$job_id '$6 == job_id' $accounting_file)"
if [ -z "$job_record" ]; then
     fatal "$prog: cannot find accounting data for job $job_id"
fi
trace "job_record $job_record"

OLD_IFS=$IFS
IFS=:
job_info=( ${job_record} )
IFS=$OLD_IFS

job_begin=${job_info[9]}
trace "job_begin $job_begin"

get_host_file() {
    id=$1
    begin=$2
    for delta in 0 -3600 3600; do
        epoch=$((begin + delta))
        yyyy_mm_dd=$(date --date="@$epoch" +"%Y/%m/%d")
        trace "checking $hostfile_dir/$yyyy_mm_dd/prolog_hostfile.$id.*"
        for host_file in $hostfile_dir/$yyyy_mm_dd/prolog_hostfile.$id.*; do
            if [ -e "$host_file" ]; then
                echo $host_file
                return
            fi
        done
    done
}

job_host_file=$(get_host_file $job_id $job_begin)
if [ -z "$job_host_file" ]; then
    fatal "$prog: cannot find host file for job '$job_id'"
fi
trace "job_host_file '$job_host_file'"

echo queue_name ${job_info[0]}
echo owner ${job_info[3]}
echo name ${job_info[4]}
echo id ${job_info[5]}
echo account ${job_info[6]}
echo submission_time ${job_info[8]}
echo start_time ${job_info[9]}
echo end_time ${job_info[10]}
echo failed ${job_info[11]}
echo exit_status ${job_info[12]}
echo granted_pe ${job_info[33]}
echo slots ${job_info[34]}
echo hosts $(cat $job_host_file)
echo
