#!/bin/bash

prog=$(basename "$0")
prog_path=$([[ $0 == /* ]] && echo "$0" || echo "${PWD}/${0#./}")
export PATH=$PATH:$(dirname "$prog_path")

stats_home=${TACC_STATS_HOME-/scratch/projects/tacc_stats}
accounting_file=$stats_home/accounting
hostfile_dir=$stats_home/hostfiles
report_dir=${report_dir-.} # /share/home/01114/jhammond/tacc_stats_report

trace() {
    if [ -n "$DEBUG" ]; then
        echo "$1" >&2
    fi
}

error() {
    echo "$1" >&2
}

fatal() {
    echo "$1" >&2
    exit 1
}

report_begin=$1
report_end=$2
if [ -z "$report_begin" ]; then
    fatal "$prog: must specify a start time"
fi
if ! report_begin=$(date --date="$report_begin" +%s); then
    fatal "$prog: invalid start time"
fi

if [ -z "$report_end" ]; then
    report_end=$((report_begin + 86400))
elif ! report_end=$(date --date="$report_end" +%s); then
    fatal "$prog: invalid end time"
fi

# Find the hostfile written during the prolog.  For example:
# /share/sge6.2/default/tacc/hostfile_logs/2011/05/19/prolog_hostfile.1957000.IV32627

get_host_file() {
    id=$1
    begin_epoch=$2
    for delta in 0 -3600 3600; do
        epoch=$((begin_epoch + delta))
        yyyy_mm_dd=$(date --date="@$epoch" +"%Y/%m/%d")
        trace "$hostfile_dir/$yyyy_mm_dd/prolog_hostfile.$id.*"
        for host_file in $hostfile_dir/$yyyy_mm_dd/prolog_hostfile.$id.*; do
            if [ -e "$host_file" ]; then
                echo $host_file
                return
            fi
        done
    done
}

awk -F: -v r0=$report_begin -v r1=$report_end 'r0 <= $11 && $11 < r1' $accounting_file | while read job_record; do
    trace "job_record '$job_record'"
    OLD_IFS=$IFS
    IFS=:
    job_info=( ${job_record} )
    IFS=$OLD_IFS

    job_id=${job_info[5]}
    job_begin=${job_info[9]}

    job_owner=${job_info[3]}
    if [ -n "$owner" -a "$owner" != "$job_owner" ]; then
        continue
    fi

    # Skip vis jobs, for now.
    queue_name=${job_info[0]}
    if [ "$queue_name" == "vis" ]; then
        trace "$prog: skipping vis job '$job_id'"
        continue
    fi

    # We assume that for each job there exists a unique record in
    # accounting with pe_taskid equal to NONE.
    pe_taskid=${job_info[41]}
    if [ "$pe_taskid" != NONE ]; then
        trace "$prog: skipping record for job '$job_id' with pe_taskid '$pe_taskid'"
        continue
    fi

    job_host_file=$(get_host_file $job_id $job_begin)
    if [ -z "$job_host_file" ]; then
        error "$prog: cannot find host file for job '$job_id'"
        continue
    fi
    trace "job_host_file '$job_host_file'"

    echo queue_name ${job_info[0]}
    echo owner ${job_info[3]}
    echo name ${job_info[4]}
    echo id ${job_info[5]}
    echo account ${job_info[6]}
    echo submission_time ${job_info[8]}
    echo start_time ${job_info[9]}
    echo end_time ${job_info[10]}
    echo failed ${job_info[11]}
    echo exit_status ${job_info[12]}
    echo granted_pe ${job_info[33]}
    echo slots ${job_info[34]}
    echo hosts $(cat $job_host_file)
    echo
done
